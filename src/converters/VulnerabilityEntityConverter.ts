import {
  VULNERABILITY_ENTITY_CLASS,
  VULNERABILITY_ENTITY_TYPE,
  VulnerabilityEntity,
} from "../jupiterone/entities";
import { Dictionary, Vulnerability } from "../tenable";
import generateKey from "../utils/generateKey";

export function createVulnerabilityEntities(
  vulnerabilitiesDic: Dictionary<Vulnerability[]>,
): VulnerabilityEntity[] {
  const defaultValue: VulnerabilityEntity[] = [];

  const vulnerabilityArrays: Vulnerability[][] = Object.values(
    vulnerabilitiesDic,
  );

  console.warn(vulnerabilityArrays);

  const vulnerabilityEntities = vulnerabilityArrays.reduce(
    (acc: VulnerabilityEntity[], data: Vulnerability[]) => {
      const vulnerabilities: VulnerabilityEntity[] = data.map(
        mapToVulnerabilityEntity,
      );

      return acc.concat(vulnerabilities);
    },
    defaultValue,
  );

  console.warn(vulnerabilityEntities);

  return vulnerabilityEntities;
}

function mapToVulnerabilityEntity(item: Vulnerability): VulnerabilityEntity {
  const vulnerabilityEntity: VulnerabilityEntity = {
    _key: generateKey(VULNERABILITY_ENTITY_TYPE, item.plugin_id),
    _type: VULNERABILITY_ENTITY_TYPE,
    _class: VULNERABILITY_ENTITY_CLASS,
    pluginId: item.plugin_id,
    pluginFamily: item.plugin_family,
    pluginName: item.plugin_name,
    count: item.count,
    severity: item.severity,
  };

  return vulnerabilityEntity;
}
