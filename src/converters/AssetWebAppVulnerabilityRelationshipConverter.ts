import {
  ASSET_ENTITY_TYPE,
  ASSET_HAS_WEBAPP_VULNERABILITY_RELATIONSHIP_CLASS,
  ASSET_HAS_WEBAPP_VULNERABILITY_RELATIONSHIP_TYPE,
  AssetWebAppVulnerabilityRelationship,
  WEBAPP_VULNERABILITY_ENTITY_TYPE,
} from "../jupiterone/entities";

import { Asset, Dictionary, WebAppVulnerability } from "../tenable";
import generateKey from "../utils/generateKey";

const defaultValue: AssetWebAppVulnerabilityRelationship[] = [];

export function createAssetWebAppVulnerabilityRelationships(
  assets: Asset[],
  webAppVulnerabilitiesDictionary: Dictionary<WebAppVulnerability[]>,
): AssetWebAppVulnerabilityRelationship[] {
  const relationships: AssetWebAppVulnerabilityRelationship[] = assets.reduce(
    (acc, asset) => {
      const relationshipsForOneApplication = createRelationshipsForOneAsset(
        asset,
        webAppVulnerabilitiesDictionary,
      );

      return acc.concat(relationshipsForOneApplication);
    },
    defaultValue,
  );

  return relationships;
}

function createRelationshipsForOneAsset(
  asset: Asset,
  webAppVulnerabilitiesDictionary: Dictionary<WebAppVulnerability[]>,
) {
  return asset.fqdn.reduce((acc, item) => {
    const vulnerabilities = webAppVulnerabilitiesDictionary[item];

    if (!vulnerabilities || vulnerabilities.length === 0) {
      return acc;
    }

    const relationshipsForOneFqdn = createRelationshipsForOneHostname(
      vulnerabilities,
      asset.id,
    );

    return acc.concat(relationshipsForOneFqdn);
  }, defaultValue);
}

function createRelationshipsForOneHostname(
  vulnerabilities: WebAppVulnerability[],
  assetId: string,
): AssetWebAppVulnerabilityRelationship[] {
  const relationships: AssetWebAppVulnerabilityRelationship[] = vulnerabilities.map(
    item => {
      const parentKey = generateKey(ASSET_ENTITY_TYPE, assetId);
      const childKey = generateKey(
        WEBAPP_VULNERABILITY_ENTITY_TYPE,
        item.plugin_id,
      );
      const relationship: AssetWebAppVulnerabilityRelationship = {
        _class: ASSET_HAS_WEBAPP_VULNERABILITY_RELATIONSHIP_CLASS,
        _type: ASSET_HAS_WEBAPP_VULNERABILITY_RELATIONSHIP_TYPE,
        _fromEntityKey: parentKey,
        _key: `${parentKey}_has_${childKey}`,
        _toEntityKey: childKey,
      };

      return relationship;
    },
  );

  return relationships;
}
