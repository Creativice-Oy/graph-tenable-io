import {
  ASSET_ENTITY_TYPE,
  ASSET_SCAN_VULNERABILITY_RELATIONSHIP_CLASS,
  ASSET_SCAN_VULNERABILITY_RELATIONSHIP_TYPE,
  AssetScanVulnerabilityRelationship,
  SCAN_VULNERABILITY_ENTITY_TYPE,
} from "../jupiterone/entities";
import { Asset, Dictionary, ScanVulnerability } from "../tenable/types";
import {
  generateEntityKey,
  generateRelationshipKey,
} from "../utils/generateKey";

const defaultValue: AssetScanVulnerabilityRelationship[] = [];

export function createAssetScanVulnerabilityRelationships(
  assets: Asset[],
  scanVulnerabilities: Dictionary<ScanVulnerability[]>,
): AssetScanVulnerabilityRelationship[] {
  const relationships: AssetScanVulnerabilityRelationship[] = assets.reduce(
    (acc, asset) => {
      const relationshipsForOneApplication = createRelationshipsForOneAsset(
        asset,
        scanVulnerabilities,
      );

      return acc.concat(relationshipsForOneApplication);
    },
    defaultValue,
  );

  return relationships;
}

function createRelationshipsForOneAsset(
  asset: Asset,
  webAppVulnerabilitiesDictionary: Dictionary<ScanVulnerability[]>,
): AssetScanVulnerabilityRelationship[] {
  return asset.fqdn.reduce((acc, item) => {
    const vulnerabilities = webAppVulnerabilitiesDictionary[item];

    if (!vulnerabilities || vulnerabilities.length === 0) {
      return acc;
    }

    const relationshipsForOneFqdn = createRelationshipsForOneHostname(
      vulnerabilities,
      asset.id,
    );

    return acc.concat(relationshipsForOneFqdn);
  }, defaultValue);
}

function createRelationshipsForOneHostname(
  vulnerabilities: ScanVulnerability[],
  assetId: string,
): AssetScanVulnerabilityRelationship[] {
  const relationships: AssetScanVulnerabilityRelationship[] = vulnerabilities.map(
    item => {
      const parentKey = generateEntityKey(ASSET_ENTITY_TYPE, assetId);
      const childKey = generateEntityKey(
        SCAN_VULNERABILITY_ENTITY_TYPE,
        `${item.plugin_id}_${item.host_id}_${item.scan_id}`,
      );
      const relationKey = generateRelationshipKey(
        parentKey,
        ASSET_SCAN_VULNERABILITY_RELATIONSHIP_CLASS,
        childKey,
      );
      const relationship: AssetScanVulnerabilityRelationship = {
        _class: ASSET_SCAN_VULNERABILITY_RELATIONSHIP_CLASS,
        _type: ASSET_SCAN_VULNERABILITY_RELATIONSHIP_TYPE,
        _fromEntityKey: parentKey,
        _key: relationKey,
        _toEntityKey: childKey,
      };

      return relationship;
    },
  );

  return relationships;
}
