import {
  WEBAPP_VULNERABILITY_ENTITY_CLASS,
  WEBAPP_VULNERABILITY_ENTITY_TYPE,
  WebAppVulnerabilityEntity,
} from "../jupiterone/entities";
import { Dictionary, WebAppVulnerability } from "../types";
import { generateEntityKey } from "../utils/generateKey";

export function createVulnerabilityEntities(
  vulnerabilitiesDic: Dictionary<WebAppVulnerability[]>,
): WebAppVulnerabilityEntity[] {
  const defaultValue: WebAppVulnerabilityEntity[] = [];
  const vulnerabilityArrays: WebAppVulnerability[][] = Object.values(
    vulnerabilitiesDic,
  );

  const vulnerabilityEntities = vulnerabilityArrays.reduce(
    (acc: WebAppVulnerabilityEntity[], data: WebAppVulnerability[]) => {
      const vulnerabilities: WebAppVulnerabilityEntity[] = data.map(
        mapToVulnerabilityEntity,
      );

      return acc.concat(vulnerabilities);
    },
    defaultValue,
  );

  return vulnerabilityEntities;
}

function mapToVulnerabilityEntity(
  item: WebAppVulnerability,
): WebAppVulnerabilityEntity {
  const vulnerabilityEntity: WebAppVulnerabilityEntity = {
    _key: generateEntityKey(
      WEBAPP_VULNERABILITY_ENTITY_TYPE,
      `${item.plugin_id}_${item.host_id}`,
    ),
    _type: WEBAPP_VULNERABILITY_ENTITY_TYPE,
    _class: WEBAPP_VULNERABILITY_ENTITY_CLASS,
    pluginId: item.plugin_id,
    pluginFamily: item.plugin_family,
    pluginName: item.plugin_name,
    count: item.count,
    severity: item.severity,
    hostId: item.host_id,
    hostName: item.hostname,
  };

  return vulnerabilityEntity;
}
