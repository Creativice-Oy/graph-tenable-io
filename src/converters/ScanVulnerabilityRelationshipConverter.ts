import {
  SCAN_ENTITY_TYPE,
  SCAN_VULNERABILITY_RELATIONSHIP_CLASS,
  SCAN_VULNERABILITY_RELATIONSHIP_TYPE,
  ScanVulnerabilityRelationship,
} from "../jupiterone/entities";
import { ScanDetail, VulnerabilitySummary } from "../tenable/types";
import {
  generateEntityKey,
  generateRelationshipKey,
} from "../utils/generateKey";
import { tenableVulnerablilityEntityKey } from "./ScanVulnerabilityEntityConverter";

export function createScanVulnerabilityRelationships(
  scans: ScanDetail[],
): ScanVulnerabilityRelationship[] {
  return scans.reduce((acc: ScanVulnerabilityRelationship[], scan) => {
    return [
      ...acc,
      ...scan.vulnerabilities.map(v =>
        createScanVulnerabilityRelationship(scan, v),
      ),
    ];
  }, []);
}

export function createScanVulnerabilityRelationship(
  scan: ScanDetail,
  vulnerability: VulnerabilitySummary,
): ScanVulnerabilityRelationship {
  const parentKey = generateEntityKey(SCAN_ENTITY_TYPE, scan.id);
  const childKey = tenableVulnerablilityEntityKey(vulnerability);

  const relationKey = generateRelationshipKey(
    parentKey,
    SCAN_VULNERABILITY_RELATIONSHIP_CLASS,
    childKey,
  );

  return {
    _class: SCAN_VULNERABILITY_RELATIONSHIP_CLASS,
    _type: SCAN_VULNERABILITY_RELATIONSHIP_TYPE,
    _fromEntityKey: parentKey,
    _key: relationKey,
    _toEntityKey: childKey,
  };
}
