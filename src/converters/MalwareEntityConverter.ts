import { entities } from "../constants";
import { ContainerMalware, Dictionary } from "../tenable/types";
import { generateEntityKey } from "../utils/generateKey";

export function createMalwareEntities(data: Dictionary<ContainerMalware[]>) {
  const defaultValue: any[] = [];
  const vulnerabilityArrays = Object.values(data);

  const relationships = vulnerabilityArrays.reduce((acc, array) => {
    const relationsForOneReport = array.map(createMalwareEntity);
    return acc.concat(relationsForOneReport);
  }, defaultValue);

  return relationships;
}

function createMalwareEntity(vulnerability: ContainerMalware) {
  const malwareId = vulnerability.md5;
  return {
    _key: generateEntityKey(entities.CONTAINER_MALWARE._type, malwareId),
    _type: entities.CONTAINER_MALWARE._type,
    _class: entities.CONTAINER_MALWARE._class,
    _rawData: [{ name: "default", rawData: vulnerability }],
    infectedFile: vulnerability.infectedFile,
    fileTypeDescriptor: vulnerability.fileTypeDescriptor,
    md5: vulnerability.md5,
    sha256: vulnerability.sha256,
  };
}
