import {
  MALWARE_ENTITY_CLASS,
  MALWARE_ENTITY_TYPE,
  MalwareVulnerabilityEntity,
} from "../jupiterone/entities";
import { Dictionary, Malware } from "../types";
import { generateEntityKey } from "../utils/generateKey";

export function createMalwareEntities(
  data: Dictionary<Malware[]>,
): MalwareVulnerabilityEntity[] {
  const defaultValue: MalwareVulnerabilityEntity[] = [];
  const vulnerabilityArrays = Object.values(data);

  const relationships = vulnerabilityArrays.reduce(
    (acc: MalwareVulnerabilityEntity[], array) => {
      const relationsForOneReport: MalwareVulnerabilityEntity[] = array.map(
        createMalwareEntity,
      );
      return acc.concat(relationsForOneReport);
    },
    defaultValue,
  );

  return relationships;
}

function createMalwareEntity(
  vulnerability: Malware,
): MalwareVulnerabilityEntity {
  const malwareId = vulnerability.md5;
  return {
    _key: generateEntityKey(MALWARE_ENTITY_TYPE, malwareId),
    _type: MALWARE_ENTITY_TYPE,
    _class: MALWARE_ENTITY_CLASS,
    infectedFile: vulnerability.infectedFile,
    fileTypeDescriptor: vulnerability.fileTypeDescriptor,
    md5: vulnerability.md5,
    sha256: vulnerability.sha256,
  };
}
