import {
  ASSESSMENT_ENTITY_TYPE,
  ASSESSMENT_HAS_VULNERABILITY_RELATIONSHIP_CLASS,
  ASSESSMENT_HAS_VULNERABILITY_RELATIONSHIP_TYPE,
  AssessmentVulnerabilityRelationship,
  VULNERABILITY_ENTITY_TYPE,
} from "../jupiterone/entities";
import { Scan } from "../tenable";
import generateKey from "../utils/generateKey";

export function createAssessmentVulnerabilityRelationships(
  scans: Scan[],
): AssessmentVulnerabilityRelationship[] {
  const defaultValue: AssessmentVulnerabilityRelationship[] = [];

  const relationships: AssessmentVulnerabilityRelationship[] = scans.reduce(
    (acc, scan) => {
      if (!scan.scanDetail) {
        return acc;
      }

      const relationshipsForOneScan: AssessmentVulnerabilityRelationship[] = scan.scanDetail.vulnerabilities.map(
        item => {
          const parentKey = generateKey(ASSESSMENT_ENTITY_TYPE, scan.id);
          const childKey = generateKey(
            VULNERABILITY_ENTITY_TYPE,
            item.plugin_id,
          );

          const relationship: AssessmentVulnerabilityRelationship = {
            _class: ASSESSMENT_HAS_VULNERABILITY_RELATIONSHIP_CLASS,
            _type: ASSESSMENT_HAS_VULNERABILITY_RELATIONSHIP_TYPE,
            _fromEntityKey: parentKey,
            _key: `${parentKey}_has_${childKey}`,
            _toEntityKey: childKey,
          };
          return relationship;
        },
      );

      return acc.concat(relationshipsForOneScan);
    },
    defaultValue,
  );

  return relationships;
}
